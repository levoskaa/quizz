version: '3.4'

services:
  apigateway:
    container_name: "quizz_api-gateway"
    image: ${DOCKER_REGISTRY-}apigateway
    build:
      context: .
      dockerfile: ApiGateway/Dockerfile
    ports:
      - "32000:80"
      - "32001:443"

  game:
    container_name: "quizz_game"
    image: ${DOCKER_REGISTRY-}game
    build:
      context: .
      dockerfile: Game/Dockerfile
    environment:
      - ConnectionString=Server=sql-server;Database=GameDb;User Id=sa;Password=abcd!1234;
    ports:
      - "32002:80"
      - "32003:443"
    depends_on:
      - sql-server

  questions:
    container_name: "quizz_questions"
    image: ${DOCKER_REGISTRY-}questions
    build:
      context: .
      dockerfile: Questions/Dockerfile
    environment:
      - ConnectionString=Server=sql-server;Database=QuestionsDb;User Id=sa;Password=abcd!1234;
    ports:
      - "32004:80"
      - "32005:443"
    depends_on:
      - sql-server

  identity:
    container_name: "quizz_identity"
    image: ${DOCKER_REGISTRY-}identity
    build:
      context: .
      dockerfile: Identity/Dockerfile
    environment:
      - ConnectionString=Server=sql-server;Database=IdentityDb;User Id=sa;Password=abcd!1234;
    ports:
      - "32006:80"
      - "32007:443"
    depends_on:
      - sql-server

  signalr:
    container_name: "quizz_signalr"
    image: ${DOCKER_REGISTRY-}signalr
    build:
      context: .
      dockerfile: SignalR/Dockerfile
    ports:
      - "32008:80"
      - "32009:443"

  sql-server:
    container_name: "quizz_sql-server"
    image: mcr.microsoft.com/mssql/server:2019-CU13-ubuntu-20.04
    environment:
      - SA_PASSWORD=abcd!1234
      - ACCEPT_EULA=Y
    ports:
      - "5433:1433"
    volumes:
      - "quizz-data:/var/opt/mssql"

volumes:
  quizz-data:
    external: true
